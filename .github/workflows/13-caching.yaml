name: 13 - Using Caching

on: 
    workflow_dispatch:
      inputs:
        use-cache:
            description: Whether to execute cache step
            type: boolean
            default: true
        node-version:
            description: Node version
            type: choice
            options:
                - 18.x
                - 20.x
                - 21.x
            default: 20.x
jobs:
    install-deps:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: .github/workflows/13-caching/react-app #makes it so with run is used it will go to this directory
        outputs:
            deps-cache-key: ${{ steps.cache-key.outputs.CACHE_KEY }}
        steps: 
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                node-version: ${{inputs.node-version}}
            - name: Calculate cache key
              id: cache-key
              run: |
                echo "CACHE_KEY=deps-node-modules-${{hashFiles('13-caching/react-app/package-lock.json')}}" >> "$GITHUB_OUTPUT"
            - name: Download cached dependencies
              uses: actions/cache@v3
              if: ${{ inputs.use-cache }}
              id: cache
              with:
                 path: 13-caching/react-app/node-modules
                 key: ${{ steps.cache-key.outputs.CACHE_KEY }}
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci
    build:
        runs-on: ubuntu-latest
        needs: install-deps
        defaults:
            run:
                working-directory: .github/workflows/13-caching/react-app #makes it so with run is used it will go to this directory
        steps: 
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                node-version: ${{inputs.node-version}}
            - name: Download cached dependencies
              uses: actions/cache@v3
              if: ${{ inputs.use-cache }}
              id: cache
              with:
                 path: 13-caching/react-app/node-modules
                 key: ${{ needs.install-deps.outputs.deps-cach-key }}
            - name: Testing
              run: npm run test
            - name: Building
              run: npm run build
            - name: Deploying to nonprod
              run: echo "Deploying to nonprod"


        #1. Checkout the code
        #2 install dependencies
        #3  unit testing, building
        #4. Depoly to a nonprod enviroment